{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class RegisterFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.registerForm = this.fb.group({\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.minLength(8), Validators.maxLength(12)]]\n    });\n  }\n  formHandler() {\n    if (this.registerForm.valid) {\n      const {\n        name,\n        surname,\n        email,\n        password\n      } = this.registerForm.value;\n      const objectToSend = {\n        name,\n        surname,\n        email,\n        password\n      };\n      //Llamada a la api\n    }\n  }\n  static #_ = this.ɵfac = function RegisterFormComponent_Factory(t) {\n    return new (t || RegisterFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterFormComponent,\n    selectors: [[\"app-register-form\"]],\n    decls: 19,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", \"required\", \"\"], [\"for\", \"surname\"], [\"type\", \"surname\", \"id\", \"surname\", \"name\", \"surname\", \"formControlName\", \"surname\", \"required\", \"\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\"]],\n    template: function RegisterFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.formHandler();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Nombre:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Apellido:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Correo electronico:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Contrase\\u00F1a:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵtext(18, \"Registrarse\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 8px;\\n  box-sizing: border-box;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: #4caf50;\\n  color: white;\\n  padding: 10px;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9jb21wb25lbnRzL3JlZ2lzdGVyLWZvcm0vcmVnaXN0ZXItZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osYUFBYTtFQUNiLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uZm9ybS1ncm91cCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxufVxyXG5cclxubGFiZWwge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxuaW5wdXQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDhweDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1YTA0OTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","RegisterFormComponent","constructor","fb","registerForm","group","name","required","surname","email","password","minLength","maxLength","formHandler","valid","value","objectToSend","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","RegisterFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RegisterFormComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\luisc\\BOOTCAMP\\ANGULAR\\ANGULAR-SESSION7\\session_7-main\\src\\app\\auth\\components\\register-form\\register-form.component.ts","C:\\Users\\luisc\\BOOTCAMP\\ANGULAR\\ANGULAR-SESSION7\\session_7-main\\src\\app\\auth\\components\\register-form\\register-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.css']\n})\nexport class RegisterFormComponent {\nregisterForm!: FormGroup\n\nconstructor(private fb: FormBuilder){\n  this.registerForm = this.fb.group({\n    name: ['', Validators.required],\n    surname: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.minLength(8), Validators.maxLength(12)]]\n  })\n\n}\n\nformHandler() {\n  if(this.registerForm.valid){\n    const {name, surname, email, password} = this.registerForm.value;\n    const objectToSend = {\n      name,\n      surname,\n      email,\n      password\n    }\n    //Llamada a la api\n  }\n}\n\n\n}\n","<form (ngSubmit)=\"formHandler()\" [formGroup]=\"registerForm\">\n  <div class=\"form-group\">\n    <label for=\"name\">Nombre:</label>\n    <input type=\"text\" id=\"name\" name=\"name\" formControlName=\"name\" required>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"surname\">Apellido:</label>\n    <input type=\"surname\" id=\"surname\" name=\"surname\" formControlName=\"surname\" required>\n  </div>\n  <div>\n    <label for=\"email\">Correo electronico:</label>\n    <input type=\"email\" id=\"email\" name=\"email\" formControlName=\"email\" required>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Contraseña:</label>\n    <input type=\"password\" id=\"password\" name=\"password\" formControlName=\"password\" required>\n  </div>\n  <button type=\"submit\">Registrarse</button>\n</form>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;AAOnE,OAAM,MAAOC,qBAAqB;EAGlCC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MAC/BC,OAAO,EAAE,CAAC,EAAE,EAAER,UAAU,CAACO,QAAQ,CAAC;MAClCE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACY,SAAS,CAAC,EAAE,CAAC,CAAC;KACnE,CAAC;EAEJ;EAEAC,WAAWA,CAAA;IACT,IAAG,IAAI,CAACT,YAAY,CAACU,KAAK,EAAC;MACzB,MAAM;QAACR,IAAI;QAAEE,OAAO;QAAEC,KAAK;QAAEC;MAAQ,CAAC,GAAG,IAAI,CAACN,YAAY,CAACW,KAAK;MAChE,MAAMC,YAAY,GAAG;QACnBV,IAAI;QACJE,OAAO;QACPC,KAAK;QACLC;OACD;MACD;;EAEJ;EAAC,QAAAO,CAAA,G;qBAxBYhB,qBAAqB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBrB,qBAAqB;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRlCX,EAAA,CAAAa,cAAA,cAA4D;QAAtDb,EAAA,CAAAc,UAAA,sBAAAC,wDAAA;UAAA,OAAYH,GAAA,CAAAjB,WAAA,EAAa;QAAA,EAAC;QAC9BK,EAAA,CAAAa,cAAA,aAAwB;QACJb,EAAA,CAAAgB,MAAA,cAAO;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACjCjB,EAAA,CAAAkB,SAAA,eAAyE;QAC3ElB,EAAA,CAAAiB,YAAA,EAAM;QACNjB,EAAA,CAAAa,cAAA,aAAwB;QACDb,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACtCjB,EAAA,CAAAkB,SAAA,eAAqF;QACvFlB,EAAA,CAAAiB,YAAA,EAAM;QACNjB,EAAA,CAAAa,cAAA,UAAK;QACgBb,EAAA,CAAAgB,MAAA,2BAAmB;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC9CjB,EAAA,CAAAkB,SAAA,gBAA6E;QAC/ElB,EAAA,CAAAiB,YAAA,EAAM;QACNjB,EAAA,CAAAa,cAAA,cAAwB;QACAb,EAAA,CAAAgB,MAAA,wBAAW;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACzCjB,EAAA,CAAAkB,SAAA,gBAAyF;QAC3FlB,EAAA,CAAAiB,YAAA,EAAM;QACNjB,EAAA,CAAAa,cAAA,kBAAsB;QAAAb,EAAA,CAAAgB,MAAA,mBAAW;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAjBXjB,EAAA,CAAAmB,UAAA,cAAAP,GAAA,CAAA1B,YAAA,CAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}